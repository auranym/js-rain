class SplashContainer extends HTMLElement{static observedAttributes=['splashes','color'];splashes;color;shadowRoot;clipPathId;container;circles;activeParticles;gravity;prevTimestamp;newSplashTimeout;newSplashTimeoutRemaining;animReqId;constructor(){super();this.splashes=0;this.activeParticles=[];this.gravity=0.002;this.prevTimestamp=-1;this.newSplashTimeout=150;this.newSplashTimeoutRemaining=Math.random()*this.newSplashTimeout;this.clipPathId='splashes_';var a='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';for(let i=0;i<6;i++)this.clipPathId+=a.charAt(~~Math.random()*a.length);this.shadowRoot=this.attachShadow({mode:'open'});this.render()}attributeChangedCallback(A,b,c){if(A==='splashes'){this.splashes=c;this.render()}else A==='color'&&(this.color=c,this.render())}render(){this.shadowRoot.innerHTML=`
    <div style="height: 100%; width: 100%; background: ${this.color}; clip-path: url(#${this.clipPathId})"></div>
    <svg width="0" height="0">
      <defs>
        <clipPath id=${this.clipPathId}>
          ${Array(2*this.splashes).fill('<circle cx="-3" cy="-3" r="3" />').join('\n')}
        </clipPath>
      </defs>
    </svg>
    `;if(this.splashes>0){this.container=this.shadowRoot.querySelector('div');;this.circles=this.shadowRoot.querySelectorAll('circle');this.start()}else this.stop()}stop(){this.animReqId!==void 0&&(window.cancelAnimationFrame(this.animReqId),this.animReqId=void 0)}start(){this.stop();for(let i=0;i<this.circles.length;i++)i%2===0&&this.activeParticles.push({left:null,right:null});this.animReqId=window.requestAnimationFrame(this.draw.bind(this))}draw(_){this.prevTimestamp===-1&&(this.prevTimestamp=_);var B=_-this.prevTimestamp;for(let i=0;i<this.activeParticles.length;i++){const C=this.activeParticles?.[i]?.left,_b=this.activeParticles?.[i]?.right;if(C&&C.timeLeft>0){this.circles[2*i]?.setAttribute('cx',`${C.x}`);this.circles[2*i]?.setAttribute('cy',`${C.y}`);C.timeLeft-=B;C.x+=C.velocity.x*B;C.y+=C.velocity.y*B;C.velocity.y+=this.gravity*B}else C&&(this.activeParticles[i].left=null,this.circles[2*i]?.setAttribute('cx','-3'),this.circles[2*i]?.setAttribute('cy','-3'));if(_b&&_b.timeLeft>0){this.circles[2*i+1]?.setAttribute('cx',`${_b.x}`);this.circles[2*i+1]?.setAttribute('cy',`${_b.y}`);_b.timeLeft-=B;_b.x+=_b.velocity.x*B;_b.y+=_b.velocity.y*B;_b.velocity.y+=this.gravity*B}else _b&&(this.activeParticles[i].right=null,this.circles[2*i+1]?.setAttribute('cx','-3'),this.circles[2*i+1]?.setAttribute('cy','-3'));(C===null&&_b===null&&this.newSplashTimeoutRemaining<0)&&(this.activeParticles[i].left=this.getSplashParticle(!0),this.activeParticles[i].right=this.getSplashParticle(!1),this.activeParticles[i].right.x=this.activeParticles[i].left.x,this.newSplashTimeoutRemaining=this.newSplashTimeout+B)}this.newSplashTimeoutRemaining-=B;this.prevTimestamp=_;this.animReqId=window.requestAnimationFrame(this.draw.bind(this))}getSplashParticle(_a){var d=24;return{x:d+Math.random()*(this.container.clientWidth-2*d),y:this.ySpawnPos??this.container.clientHeight,velocity:{x:(0.01+0.09*Math.random())*(_a?-1:1),y:-0.4+Math.random()*0.15},timeLeft:250+Math.random()*150}}}customElements.define('splash-container',SplashContainer);
